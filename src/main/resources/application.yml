spring:
  datasource:
    url:  jdbc:h2:mem:mydb;DB_CLOSE_DELAY=-1;MODE=PostgreSQL;INIT=CREATE SCHEMA IF NOT EXISTS seqdb\;SET SCHEMA seqdb
 #   url: jdbc:postgresql://localhost:5532/seqdb
 #   username: postgres
 #   password: postgres
  liquibase:
    change-log: classpath:/db/changelog/db.changelog-master.xml
    contexts: schema-change
    # Physical naming strategy specified to allow @Table name property.
  jpa.hibernate.naming:
    physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
  jpa.properties.javax.persistence.validation.mode: none
crnk:
  pathPrefix: /api
  domainName: ""
  defaultPageLimit: 20
  maxPageLimit: 1000
  allow-unknown-attributes: true
  # The "include" query-string param is handled by our code and incorporated into the database
  # query, so we don't let Crnk automatically call findOneTarget for each null relation.
  config.lookup.behavior.default: NONE

# We shouldn't get "Request header is too large" errors:
server.max-http-header-size: 10MB

keycloak:
  enabled: false
  realm: dina
  auth-server-url: http://${KEYCLOAK_HOST_IP}:8080/auth
  ssl-required: none
  resource: seqdb
  public-client: true
  bearer-only: true
  principal-attribute: preferred_username

logging:
  level:
    com.github.tennaito.rsql: ERROR
dina:
  auditing:
    enabled: true
javers:
  packagesToScan: ca.gc.aafc.seqdb.api
  # Don't let Javers create its tables; let Liquibase create them:
  sqlSchemaManagementEnabled: false

