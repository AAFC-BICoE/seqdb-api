/*
 * =====================================================================
 * Class:		Group.java
 * Package: 	ca.gc.aafc.seqdb.api.entities
 * 
 * 
 * The MIT License (MIT)
 * 
 * Copyright (c) 2015 Agriculture and Agri-Food Canada http://www.agr.gc.ca/
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * =====================================================================
 * 
 */
package ca.gc.aafc.seqdb.api.entities;

// Generated 10-May-2007 10:53:34 by Hibernate Tools 3.2.0.beta8

import java.sql.Timestamp;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Lob;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Version;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.hibernate.annotations.Type;

/**
 * The Class Group. Group generated by hbm2java
 */
@Entity
@Table(name = "Groups")
public class Group {

  public static final String PUBLIC_GROUP_NAME = "Public";

  /** The group id. */
  private Integer groupId;

  /** The group name. */
  private String groupName;

  /** The description. */
  private String description;

  /** The default rights. */
  private String defaultRights;

  /** The last modified. */
  private Timestamp lastModified;

  /** The accounts groups. */
  private Set<AccountsGroup> accountsGroups = new HashSet<AccountsGroup>(0);

  /** The containers. */
  private Set<Container> containers = new HashSet<Container>(0);

  /**
   * Instantiates a new group.
   */
  public Group() {
  }

  /**
   * Instantiates a new group.
   *
   * @param groupName
   *          the group name
   */
  public Group(String groupName) {
    this.groupName = groupName;
  }

  /**
   * Instantiates a new group.
   *
   * @param groupName
   *          the group name
   * @param description
   *          the description
   * @param defaultRights
   *          the default rights
   * @param projects
   *          the projects
   * @param accountsGroups
   *          the accounts groups
   * @param specimens
   *          the specimens
   */
  public Group(String groupName, String description, String defaultRights,
      Set<AccountsGroup> accountsGroups) {
    this.groupName = groupName;
    this.description = description;
    this.defaultRights = defaultRights;
    this.accountsGroups = accountsGroups;
  }

  // Property accessors
  /**
   * Gets the group id.
   *
   * @return the group id
   */
  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  @Column(name = "GroupID")
  public Integer getGroupId() {
    return this.groupId;
  }

  /**
   * Sets the group id.
   *
   * @param groupId
   *          the new group id
   */
  public void setGroupId(Integer groupId) {
    this.groupId = groupId;
  }

  /**
   * Gets the group name.
   *
   * @return the group name
   */
  @NotNull
  @Size(max = 50)
  @Column(name = "GroupName", unique = true)
  public String getGroupName() {
    return this.groupName;
  }

  /**
   * Sets the group name.
   *
   * @param groupName
   *          the new group name
   */
  public void setGroupName(String groupName) {
    this.groupName = groupName;
  }

  /**
   * Gets the description.
   *
   * @return the description
   */
  @Column(name = "Description")
  @Lob
  // https://stackoverflow.com/questions/12647755/bad-value-for-type-long-postgresql-hibernate-spring#answer-21546893
  @Type(type = "org.hibernate.type.TextType")
  public String getDescription() {
    return this.description;
  }

  /**
   * Sets the description.
   *
   * @param description
   *          the new description
   */
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * Gets the default rights.
   *
   * @return the default rights
   */
  @Size(max = 20)
  @Column(name = "DefaultRights")
  public String getDefaultRights() {
    return this.defaultRights;
  }

  /**
   * Sets the default rights.
   *
   * @param defaultRights
   *          the new default rights
   */
  public void setDefaultRights(String defaultRights) {
    this.defaultRights = defaultRights;
  }

  /**
   * Gets the last modified.
   *
   * @return the last modified
   */
  @Version
  @Column(name = "LastModified")
  public Timestamp getLastModified() {
    return this.lastModified;
  }

  /**
   * Sets the last modified.
   *
   * @param lastModified
   *          the new last modified
   */
  public void setLastModified(Timestamp lastModified) {
    this.lastModified = lastModified;
  }

  /**
   * Gets the accounts groups.
   *
   * @return the accounts groups
   */
  @OneToMany(cascade = {}, fetch = FetchType.LAZY, mappedBy = "group")
  @OrderBy("accountGroupId")
  public Set<AccountsGroup> getAccountsGroups() {
    return this.accountsGroups;
  }

  /**
   * Sets the accounts groups.
   *
   * @param accountsGroups
   *          the new accounts groups
   */
  public void setAccountsGroups(Set<AccountsGroup> accountsGroups) {
    this.accountsGroups = accountsGroups;
  }


  /**
   * Gets the containers.
   *
   * @return the containers
   */
  @OneToMany(cascade = {}, fetch = FetchType.LAZY, mappedBy = "group")
  @OrderBy("containerNumber")
  public Set<Container> getContainers() {
    return containers;
  }

  /**
   * Sets the containers.
   *
   * @param containers
   *          the new containers
   */
  public void setContainers(Set<Container> containers) {
    this.containers = containers;
  }

}
